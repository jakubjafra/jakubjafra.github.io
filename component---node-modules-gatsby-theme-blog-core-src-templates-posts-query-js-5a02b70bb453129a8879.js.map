{"version":3,"sources":["webpack:///./src/gatsby-theme-blog/components/post-link.jsx","webpack:///./src/gatsby-theme-blog/components/post-list.jsx","webpack:///./src/gatsby-theme-blog/components/posts.jsx","webpack:///./node_modules/gatsby-theme-blog/src/gatsby-theme-blog-core/components/posts.js","webpack:///./node_modules/gatsby-theme-blog-core/src/templates/posts-query.js"],"names":["PostLink","title","slug","date","excerpt","div","as","sx","mb","h2","m","a","Link","to","textDecoration","p","PostList","posts","map","node","key","Posts","location","siteTitle","PostsWrapper","data","site","allBlogPost","nodes","siteMetadata","socialLinks","social","query","PostsPage"],"mappings":"4OAuCeA,EAnCE,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,KAAMC,EAAhB,EAAgBA,KAAMC,EAAtB,EAAsBA,QAAtB,OACf,YAAC,IAAOC,IAAR,CACEC,GAAG,UACHC,GAAI,CACFC,GAAI,IAGN,0BACE,YAAC,IAAOC,GAAR,CACEF,GAAI,CACFG,EAAG,EACHF,GAAI,IAGN,YAAC,IAAOG,EAAR,CACEL,GAAIM,IACJC,GAAIX,EACJK,GAAI,CACFO,eAAgB,OAChB,UAAW,CACTA,eAAgB,eAInBb,GAASC,IAGd,yBAAQC,IAEV,2BACE,YAAC,IAAOY,EAAR,KAAWX,MCpBFY,EARE,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAH,OACf,YAAC,WAAD,KACGA,EAAMC,KAAI,SAACC,GAAD,OACT,YAAC,EAAD,aAAUC,IAAKD,EAAKjB,MAAUiB,SCOrBE,EATD,SAAC,GAAD,IAAGC,EAAH,EAAGA,SAAUL,EAAb,EAAaA,MAAOM,EAApB,EAAoBA,UAApB,OACZ,YAAC,IAAD,CAAQD,SAAUA,EAAUrB,MAAOsB,GACjC,YAAC,IAAD,CAAKtB,MAAM,SACX,wBACE,YAAC,EAAD,CAAUgB,MAAOA,OCIRO,EAZM,SAAC,GAAwB,IAAtBF,EAAqB,EAArBA,SAAUG,EAAW,EAAXA,KACxBC,EAAsBD,EAAtBC,KAAMC,EAAgBF,EAAhBE,YACd,OACE,YAAC,EAAD,CACEL,SAAUA,EACVL,MAAOU,EAAYC,MACnBL,UAAWG,EAAKG,aAAa5B,MAC7B6B,YAAaJ,EAAKG,aAAaE,UCLxBC,GAFEC,YAEG","file":"component---node-modules-gatsby-theme-blog-core-src-templates-posts-query-js-5a02b70bb453129a8879.js","sourcesContent":["/** @jsx jsx */\nimport { Styled, jsx } from 'theme-ui';\nimport { Link } from 'gatsby';\n\nconst PostLink = ({ title, slug, date, excerpt }) => (\n  <Styled.div\n    as=\"article\"\n    sx={{\n      mb: 4,\n    }}\n  >\n    <header>\n      <Styled.h2\n        sx={{\n          m: 0,\n          mb: 1,\n        }}\n      >\n        <Styled.a\n          as={Link}\n          to={slug}\n          sx={{\n            textDecoration: 'none',\n            '&:hover': {\n              textDecoration: 'underline',\n            },\n          }}\n        >\n          {title || slug}\n        </Styled.a>\n      </Styled.h2>\n      <small>{date}</small>\n    </header>\n    <section>\n      <Styled.p>{excerpt}</Styled.p>\n    </section>\n  </Styled.div>\n);\n\nexport default PostLink;\n","/** @jsx jsx */\nimport { Fragment } from 'react';\nimport { jsx } from 'theme-ui';\n\nimport PostLink from './post-link';\n\nconst PostList = ({ posts }) => (\n  <Fragment>\n    {posts.map((node) => (\n      <PostLink key={node.slug} {...node} />\n    ))}\n  </Fragment>\n);\n\nexport default PostList;\n","/** @jsx jsx */\nimport { jsx } from 'theme-ui';\n\nimport Layout from './layout';\nimport SEO from './seo';\nimport PostList from './post-list';\n\nconst Posts = ({ location, posts, siteTitle }) => (\n  <Layout location={location} title={siteTitle}>\n    <SEO title=\"Home\" />\n    <main>\n      <PostList posts={posts} />\n    </main>\n  </Layout>\n);\n\nexport default Posts;\n","import React from \"react\"\nimport Posts from \"../../components/posts\"\n\nconst PostsWrapper = ({ location, data }) => {\n  const { site, allBlogPost } = data\n  return (\n    <Posts\n      location={location}\n      posts={allBlogPost.nodes}\n      siteTitle={site.siteMetadata.title}\n      socialLinks={site.siteMetadata.social}\n    />\n  )\n}\n\nexport default PostsWrapper\n","import { graphql } from \"gatsby\"\nimport PostsPage from \"../components/posts\"\n\nexport default PostsPage\n\nexport const query = graphql`\n  query PostsQuery {\n    site {\n      siteMetadata {\n        title\n        social {\n          name\n          url\n        }\n      }\n    }\n    allBlogPost(sort: { fields: [date, title], order: DESC }, limit: 1000) {\n      nodes {\n        id\n        excerpt\n        slug\n        title\n        date(formatString: \"MMMM DD, YYYY\")\n        tags\n      }\n    }\n  }\n`\n"],"sourceRoot":""}